name: SpaceONE CI
on:
  push:
    branches:
      - master

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set environment virables
        env:
          LOCATION_CHART_YAML: . # optional. for pypi upload
          FORCE_UPLOAD: true # force upload when the version has already existed.
          S3_BUCKET_NAME: helm.stargate.spaceone.dev-bucket
          S3_BUCKET_SUBPATH_CHART: charts
          S3_BUCKET_SUBPATH_MEDIA: media

        run: |
          cat <<EOF>set_env.sh
          echo "::set-env name=LOCATION_CHART_YAML::$LOCATION_CHART_YAML"
          echo "::set-env name=FORCE_UPLOAD::$FORCE_UPLOAD"
          echo "::set-env name=S3_BUCKET_NAME::$S3_BUCKET_NAME"
          echo "::set-env name=S3_BUCKET_SUBPATH_CHART::$S3_BUCKET_SUBPATH_CHART"
          echo "::set-env name=S3_BUCKET_SUBPATH_MEDIA::$S3_BUCKET_SUBPATH_MEDIA"
          EOF

          bash set_env.sh
      - name: save envs
        uses: actions/upload-artifact@v2
        with:
          name: set_env.sh
          path: set_env.sh

      - run: |
          cat set_env.sh

  helm:
    if: github.repository_owner == 'spaceone-dev'
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: set_env.sh

      - name: Set environment variables
        run: |
          bash set_env.sh

      - name: Set up Helm3
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Install Helm S3 Plugin
        run: |
          helm plugin install https://github.com/hypnoglow/helm-s3.git

      - name: Update Chart Dependencies
        run: |
          cd ${{ env.LOCATION_CHART_YAML }}
          helm dependency update
      - name: Lint
        run: |
          cd ${{ env.LOCATION_CHART_YAML }}
          helm lint .
      - name: Build
        run: |
          cd ${{ env.LOCATION_CHART_YAML }}
          helm package .

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Force Upload Helm Chart
        if: env.FORCE_UPLOAD == 'true'
        id: upload
        run: |
          helm repo add spaceone-s3 s3://${{ env.S3_BUCKET_NAME }}/${{ env.S3_BUCKET_SUBPATH_CHART }}
          helm s3 push ./spaceone-*.tgz spaceone-s3 --force
      - name: Fix index.yaml s3:// => https://
        env:
          S3_BUCKET_NAME: ${{ env.S3_BUCKET_NAME }}
          ALTERNATIVE_HOST: "helm.stargate.spaceone.dev"
        run: |
          cd editIndexYaml
          aws s3 cp s3://${{ env.S3_BUCKET_NAME }}/${{ env.S3_BUCKET_SUBPATH_CHART }}/index.yaml index.yaml
          node index.js

      - name: Upload fixed index.yaml to S3
        run: |
          cd editIndexYaml
          aws s3 cp index.yaml s3://${{ env.S3_BUCKET_NAME }}/${{ env.S3_BUCKET_SUBPATH_CHART }}/index.yaml

      - uses: actions/setup-node@v1
        with:
          node-version: '13'

      - name: Install node dependency for makeBadges
        run: |
          cd makeBadges
          npm install

      - name: makeBadges
        run: |
          cd makeBadges
          node index.js
          aws s3 cp --recursive media/ s3://${{ env.S3_BUCKET_NAME }}/${{ env.S3_BUCKET_SUBPATH_MEDIA }}/

      - name: Invalidate CloudFront Cache
        env:
          DISTRIBUTE_ID: E1HBD4U9MS0NN8
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTE_ID }}  --paths "/*"

      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}