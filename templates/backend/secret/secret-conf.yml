{{ if .Values.backend.enabled }}
{{ if .Values.backend.services.secret.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-conf
  namespace: {{ .Release.Namespace }}
data:
  secret.yml: |
    REMOTE_URL:
    - file:///opt/spaceone/secret/config/secret-secret.yml
    GLOBAL:
      MAX_WORKERS: 500
      DATABASES:
        default:
          db: 'dev-secret'
          host: {{ .Values.mongo.host }}
          port: {{ .Values.mongo.port }}
          username: {{ .Values.mongo.username }}
          password: {{ .Values.mongo.password }}
      ENDPOINT:
        secret:
          endpoint: "localhost:50051"
          version: v1
      CACHES:
        default:
          backend: spaceone.core.cache.redis_cache.RedisCache
          host: {{ .Values.redis.host }}
          port: {{ .Values.redis.port }}
          db: 4
          encoding: utf-8
          socket_timeout: 10
          socket_connect_timeout: 10
      LOG:
        loggers:
          spaceone:
            handlers:
              - console
              - file
        handlers:
          file:
            type: file
            filename: /logs/secret.log
        filters:
          masking:
            rules:
              Credential.create:
                - data
      CONNECTORS:
        AWSSecretManagerConnector:
          aws_access_key_id: {{ .Values.backend.services.secret.awsSecretManagerConnector.awsAccessKeyId }}
          aws_secret_access_key: {{ .Values.backend.services.secret.awsSecretManagerConnector.awsSecretAccessKey }}
          region_name: {{ .Values.backend.services.secret.awsSecretManagerConnector.regionName }}
        IdentityConnector:
          endpoint:
            v1: grpc://{{ .Values.backend.services.identity.endpoint }}
      HANDLERS:
        authentication:
        - backend: spaceone.core.handler.authentication_handler.AuthenticationGRPCHandler
          uri: grpc://{{ .Values.backend.services.identity.endpoint }}/v1/Domain/get_public_key
        authorization:
        - backend: spaceone.core.handler.authorization_handler.AuthorizationGRPCHandler
          uri: grpc://{{ .Values.backend.services.identity.endpoint }}/v1/Authorization/verify
{{ end }}
{{ end }}